#kaocha/v1
{:tests [{:id           :unit
          :source-paths ["src"]
          :skip-meta    [:pending]
          :test-paths   ["test/unit"]}]

 :plugins [;; At the end of the test run, print command invocations that can be copy-pasted to re-run only specific failed tests.
           :kaocha.plugin/print-invocations

           ;; The profiling plugin outputs a list of the slowest tests for each test type at the end of the test run.
           :kaocha.plugin/profiling

           ;; coverage with cloverage
           :kaocha.plugin/cloverage
           ]

 :color? true

 ;; Watch the file system for changes and re-run. You can change this here to be
 ;; on by default, then disable it when necessary with `--no-watch`.
 :watch? false

 :reporter #profile {:default kaocha.report/dots
                     :pretty  kaocha.report/documentation}

 ;; Enable/disable output capturing.
 :capture-output? true

 ;; Run with bin/kaocha --plugin cloverage
 :cloverage/opts {:ns-exclude-regex []
                  :high-watermark   80
                  :fail-threshold   0
                  :output           "target/coverage"
                  :low-watermark    50
                  :summary?         true
                  :html?            true}
 }

;; https://cljdoc.org/d/lambdaisland/kaocha/1.64.1010/doc/3-configuration

;; profiling - bin/kaocha --plugin profiling

;; progress reporter - --reporter kaocha.report.progress/report

;; profiles - bin/kaocha --profile :ci

;;;;
;; Focus

;; id - bin/kaocha --focus :unit

;; ns - bin/kaocha --focus com.my.project-test

;; var - bin/kaocha --focus com.my.project-test/foo-test

;;;;
;; Pending

;; (deftest ^:pending my-test
;;   ,,,)

;; and use :skip-meta [:pending] in config

;;;;
;; Watch

;; for example - bin/kaocha unit --watch --fail-fast
